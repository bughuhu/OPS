// Generated from /home/mquinn/evm/grammars/PeopleCode.g4 by ANTLR 4.1
package com.enterrupt.antlr4.frontend;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PeopleCodeLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__36=1, T__35=2, T__34=3, T__33=4, T__32=5, T__31=6, T__30=7, T__29=8, 
		T__28=9, T__27=10, T__26=11, T__25=12, T__24=13, T__23=14, T__22=15, T__21=16, 
		T__20=17, T__19=18, T__18=19, T__17=20, T__16=21, T__15=22, T__14=23, 
		T__13=24, T__12=25, T__11=26, T__10=27, T__9=28, T__8=29, T__7=30, T__6=31, 
		T__5=32, T__4=33, T__3=34, T__2=35, T__1=36, T__0=37, GENERIC_ID=38, DecimalLiteral=39, 
		IntegerLiteral=40, StringLiteral=41, VAR_ID=42, SYS_VAR_ID=43, REM=44, 
		COMMENT=45, WS=46;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'Field'", "'True'", "'End-For'", "','", "'('", "'To'", "'false'", "'When-Other'", 
		"'Evaluate'", "'Else'", "'When'", "'Rowset'", "'boolean'", "'For'", "'true'", 
		"'Component'", "'If'", "'And'", "'Global'", "'False'", "'End-Evaluate'", 
		"')'", "'.'", "'Record'", "'@'", "'<>'", "'='", "';'", "'End-If'", "'Exit'", 
		"'Local'", "'Break'", "'integer'", "'string'", "'MenuName'", "'|'", "'Then'", 
		"GENERIC_ID", "DecimalLiteral", "IntegerLiteral", "StringLiteral", "VAR_ID", 
		"SYS_VAR_ID", "REM", "COMMENT", "WS"
	};
	public static final String[] ruleNames = {
		"T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", 
		"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "GENERIC_ID", "DecimalLiteral", "IntegerLiteral", 
		"StringLiteral", "VAR_ID", "SYS_VAR_ID", "REM", "COMMENT", "WS"
	};


	public PeopleCodeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PeopleCode.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 43: REM_action((RuleContext)_localctx, actionIndex); break;

		case 44: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 45: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void REM_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\60\u0179\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n"+
		"\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3"+
		" \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#"+
		"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3&\3&\3&\3&\3&\3\'"+
		"\3\'\7\'\u012e\n\'\f\'\16\'\u0131\13\'\3(\3(\3(\6(\u0136\n(\r(\16(\u0137"+
		"\3)\3)\3)\7)\u013d\n)\f)\16)\u0140\13)\5)\u0142\n)\3*\3*\7*\u0146\n*\f"+
		"*\16*\u0149\13*\3*\3*\3+\3+\6+\u014f\n+\r+\16+\u0150\3,\3,\6,\u0155\n"+
		",\r,\16,\u0156\3-\3-\3-\3-\3-\7-\u015e\n-\f-\16-\u0161\13-\3-\3-\3.\3"+
		".\3.\3.\7.\u0169\n.\f.\16.\u016c\13.\3.\3.\3.\3.\3.\3/\6/\u0174\n/\r/"+
		"\16/\u0175\3/\3/\3\u016a\60\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t"+
		"\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1"+
		"#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67"+
		"\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,"+
		"\1W-\1Y.\2[/\3]\60\4\3\2\t\4\2C\\c|\6\2\62;C\\aac|\3\2\62;\3\2$$\5\2C"+
		"\\aac|\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u0182\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y"+
		"\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\3_\3\2\2\2\5e\3\2\2\2\7j\3\2\2\2\tr\3\2"+
		"\2\2\13t\3\2\2\2\rv\3\2\2\2\17y\3\2\2\2\21\177\3\2\2\2\23\u008a\3\2\2"+
		"\2\25\u0093\3\2\2\2\27\u0098\3\2\2\2\31\u009d\3\2\2\2\33\u00a4\3\2\2\2"+
		"\35\u00ac\3\2\2\2\37\u00b0\3\2\2\2!\u00b5\3\2\2\2#\u00bf\3\2\2\2%\u00c2"+
		"\3\2\2\2\'\u00c6\3\2\2\2)\u00cd\3\2\2\2+\u00d3\3\2\2\2-\u00e0\3\2\2\2"+
		"/\u00e2\3\2\2\2\61\u00e4\3\2\2\2\63\u00eb\3\2\2\2\65\u00ed\3\2\2\2\67"+
		"\u00f0\3\2\2\29\u00f2\3\2\2\2;\u00f4\3\2\2\2=\u00fb\3\2\2\2?\u0100\3\2"+
		"\2\2A\u0106\3\2\2\2C\u010c\3\2\2\2E\u0114\3\2\2\2G\u011b\3\2\2\2I\u0124"+
		"\3\2\2\2K\u0126\3\2\2\2M\u012b\3\2\2\2O\u0132\3\2\2\2Q\u0141\3\2\2\2S"+
		"\u0143\3\2\2\2U\u014c\3\2\2\2W\u0152\3\2\2\2Y\u0158\3\2\2\2[\u0164\3\2"+
		"\2\2]\u0173\3\2\2\2_`\7H\2\2`a\7k\2\2ab\7g\2\2bc\7n\2\2cd\7f\2\2d\4\3"+
		"\2\2\2ef\7V\2\2fg\7t\2\2gh\7w\2\2hi\7g\2\2i\6\3\2\2\2jk\7G\2\2kl\7p\2"+
		"\2lm\7f\2\2mn\7/\2\2no\7H\2\2op\7q\2\2pq\7t\2\2q\b\3\2\2\2rs\7.\2\2s\n"+
		"\3\2\2\2tu\7*\2\2u\f\3\2\2\2vw\7V\2\2wx\7q\2\2x\16\3\2\2\2yz\7h\2\2z{"+
		"\7c\2\2{|\7n\2\2|}\7u\2\2}~\7g\2\2~\20\3\2\2\2\177\u0080\7Y\2\2\u0080"+
		"\u0081\7j\2\2\u0081\u0082\7g\2\2\u0082\u0083\7p\2\2\u0083\u0084\7/\2\2"+
		"\u0084\u0085\7Q\2\2\u0085\u0086\7v\2\2\u0086\u0087\7j\2\2\u0087\u0088"+
		"\7g\2\2\u0088\u0089\7t\2\2\u0089\22\3\2\2\2\u008a\u008b\7G\2\2\u008b\u008c"+
		"\7x\2\2\u008c\u008d\7c\2\2\u008d\u008e\7n\2\2\u008e\u008f\7w\2\2\u008f"+
		"\u0090\7c\2\2\u0090\u0091\7v\2\2\u0091\u0092\7g\2\2\u0092\24\3\2\2\2\u0093"+
		"\u0094\7G\2\2\u0094\u0095\7n\2\2\u0095\u0096\7u\2\2\u0096\u0097\7g\2\2"+
		"\u0097\26\3\2\2\2\u0098\u0099\7Y\2\2\u0099\u009a\7j\2\2\u009a\u009b\7"+
		"g\2\2\u009b\u009c\7p\2\2\u009c\30\3\2\2\2\u009d\u009e\7T\2\2\u009e\u009f"+
		"\7q\2\2\u009f\u00a0\7y\2\2\u00a0\u00a1\7u\2\2\u00a1\u00a2\7g\2\2\u00a2"+
		"\u00a3\7v\2\2\u00a3\32\3\2\2\2\u00a4\u00a5\7d\2\2\u00a5\u00a6\7q\2\2\u00a6"+
		"\u00a7\7q\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7c\2\2"+
		"\u00aa\u00ab\7p\2\2\u00ab\34\3\2\2\2\u00ac\u00ad\7H\2\2\u00ad\u00ae\7"+
		"q\2\2\u00ae\u00af\7t\2\2\u00af\36\3\2\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2"+
		"\7t\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4\7g\2\2\u00b4 \3\2\2\2\u00b5\u00b6"+
		"\7E\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7o\2\2\u00b8\u00b9\7r\2\2\u00b9"+
		"\u00ba\7q\2\2\u00ba\u00bb\7p\2\2\u00bb\u00bc\7g\2\2\u00bc\u00bd\7p\2\2"+
		"\u00bd\u00be\7v\2\2\u00be\"\3\2\2\2\u00bf\u00c0\7K\2\2\u00c0\u00c1\7h"+
		"\2\2\u00c1$\3\2\2\2\u00c2\u00c3\7C\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5"+
		"\7f\2\2\u00c5&\3\2\2\2\u00c6\u00c7\7I\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9"+
		"\7q\2\2\u00c9\u00ca\7d\2\2\u00ca\u00cb\7c\2\2\u00cb\u00cc\7n\2\2\u00cc"+
		"(\3\2\2\2\u00cd\u00ce\7H\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7n\2\2\u00d0"+
		"\u00d1\7u\2\2\u00d1\u00d2\7g\2\2\u00d2*\3\2\2\2\u00d3\u00d4\7G\2\2\u00d4"+
		"\u00d5\7p\2\2\u00d5\u00d6\7f\2\2\u00d6\u00d7\7/\2\2\u00d7\u00d8\7G\2\2"+
		"\u00d8\u00d9\7x\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7n\2\2\u00db\u00dc"+
		"\7w\2\2\u00dc\u00dd\7c\2\2\u00dd\u00de\7v\2\2\u00de\u00df\7g\2\2\u00df"+
		",\3\2\2\2\u00e0\u00e1\7+\2\2\u00e1.\3\2\2\2\u00e2\u00e3\7\60\2\2\u00e3"+
		"\60\3\2\2\2\u00e4\u00e5\7T\2\2\u00e5\u00e6\7g\2\2\u00e6\u00e7\7e\2\2\u00e7"+
		"\u00e8\7q\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea\7f\2\2\u00ea\62\3\2\2\2\u00eb"+
		"\u00ec\7B\2\2\u00ec\64\3\2\2\2\u00ed\u00ee\7>\2\2\u00ee\u00ef\7@\2\2\u00ef"+
		"\66\3\2\2\2\u00f0\u00f1\7?\2\2\u00f18\3\2\2\2\u00f2\u00f3\7=\2\2\u00f3"+
		":\3\2\2\2\u00f4\u00f5\7G\2\2\u00f5\u00f6\7p\2\2\u00f6\u00f7\7f\2\2\u00f7"+
		"\u00f8\7/\2\2\u00f8\u00f9\7K\2\2\u00f9\u00fa\7h\2\2\u00fa<\3\2\2\2\u00fb"+
		"\u00fc\7G\2\2\u00fc\u00fd\7z\2\2\u00fd\u00fe\7k\2\2\u00fe\u00ff\7v\2\2"+
		"\u00ff>\3\2\2\2\u0100\u0101\7N\2\2\u0101\u0102\7q\2\2\u0102\u0103\7e\2"+
		"\2\u0103\u0104\7c\2\2\u0104\u0105\7n\2\2\u0105@\3\2\2\2\u0106\u0107\7"+
		"D\2\2\u0107\u0108\7t\2\2\u0108\u0109\7g\2\2\u0109\u010a\7c\2\2\u010a\u010b"+
		"\7m\2\2\u010bB\3\2\2\2\u010c\u010d\7k\2\2\u010d\u010e\7p\2\2\u010e\u010f"+
		"\7v\2\2\u010f\u0110\7g\2\2\u0110\u0111\7i\2\2\u0111\u0112\7g\2\2\u0112"+
		"\u0113\7t\2\2\u0113D\3\2\2\2\u0114\u0115\7u\2\2\u0115\u0116\7v\2\2\u0116"+
		"\u0117\7t\2\2\u0117\u0118\7k\2\2\u0118\u0119\7p\2\2\u0119\u011a\7i\2\2"+
		"\u011aF\3\2\2\2\u011b\u011c\7O\2\2\u011c\u011d\7g\2\2\u011d\u011e\7p\2"+
		"\2\u011e\u011f\7w\2\2\u011f\u0120\7P\2\2\u0120\u0121\7c\2\2\u0121\u0122"+
		"\7o\2\2\u0122\u0123\7g\2\2\u0123H\3\2\2\2\u0124\u0125\7~\2\2\u0125J\3"+
		"\2\2\2\u0126\u0127\7V\2\2\u0127\u0128\7j\2\2\u0128\u0129\7g\2\2\u0129"+
		"\u012a\7p\2\2\u012aL\3\2\2\2\u012b\u012f\t\2\2\2\u012c\u012e\t\3\2\2\u012d"+
		"\u012c\3\2\2\2\u012e\u0131\3\2\2\2\u012f\u012d\3\2\2\2\u012f\u0130\3\2"+
		"\2\2\u0130N\3\2\2\2\u0131\u012f\3\2\2\2\u0132\u0133\5Q)\2\u0133\u0135"+
		"\7\60\2\2\u0134\u0136\t\4\2\2\u0135\u0134\3\2\2\2\u0136\u0137\3\2\2\2"+
		"\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138P\3\2\2\2\u0139\u0142\7"+
		"\62\2\2\u013a\u013e\4\63;\2\u013b\u013d\4\62;\2\u013c\u013b\3\2\2\2\u013d"+
		"\u0140\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0142\3\2"+
		"\2\2\u0140\u013e\3\2\2\2\u0141\u0139\3\2\2\2\u0141\u013a\3\2\2\2\u0142"+
		"R\3\2\2\2\u0143\u0147\7$\2\2\u0144\u0146\n\5\2\2\u0145\u0144\3\2\2\2\u0146"+
		"\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u014a\3\2"+
		"\2\2\u0149\u0147\3\2\2\2\u014a\u014b\7$\2\2\u014bT\3\2\2\2\u014c\u014e"+
		"\7(\2\2\u014d\u014f\t\6\2\2\u014e\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150"+
		"\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151V\3\2\2\2\u0152\u0154\7\'\2\2"+
		"\u0153\u0155\t\6\2\2\u0154\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0154"+
		"\3\2\2\2\u0156\u0157\3\2\2\2\u0157X\3\2\2\2\u0158\u0159\7t\2\2\u0159\u015a"+
		"\7g\2\2\u015a\u015b\7o\2\2\u015b\u015f\3\2\2\2\u015c\u015e\n\7\2\2\u015d"+
		"\u015c\3\2\2\2\u015e\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2"+
		"\2\2\u0160\u0162\3\2\2\2\u0161\u015f\3\2\2\2\u0162\u0163\b-\2\2\u0163"+
		"Z\3\2\2\2\u0164\u0165\7\61\2\2\u0165\u0166\7,\2\2\u0166\u016a\3\2\2\2"+
		"\u0167\u0169\13\2\2\2\u0168\u0167\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u016b"+
		"\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016d\3\2\2\2\u016c\u016a\3\2\2\2\u016d"+
		"\u016e\7,\2\2\u016e\u016f\7\61\2\2\u016f\u0170\3\2\2\2\u0170\u0171\b."+
		"\3\2\u0171\\\3\2\2\2\u0172\u0174\t\b\2\2\u0173\u0172\3\2\2\2\u0174\u0175"+
		"\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0177\3\2\2\2\u0177"+
		"\u0178\b/\4\2\u0178^\3\2\2\2\r\2\u012f\u0137\u013e\u0141\u0147\u0150\u0156"+
		"\u015f\u016a\u0175";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}