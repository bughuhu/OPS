(program (classicProg (stmtList (stmt (varDecl (varScopeModifier Local) (varTypeModifier integer) &cnt_StdntList , &i)) ; (stmt (varDecl (varScopeModifier Local) (varTypeModifier Field) &fld)) ; (stmt (varDecl (varScopeModifier Local) (varTypeModifier Rowset) &rs_StdntList)) ; (stmt (varDecl (varScopeModifier Local) (varTypeModifier string) &curr_ID , &prev_ID)) ; (stmt (ifConstruct If (expr (expr (id %Menu)) = (expr (literal (definitionLiteral (defnKeyword MenuName) . SSR_ADVISEE_OVRD)))) Then (stmtList (stmt (expr (id &fld)) = (expr (expr (id GetField)) ( (exprList (expr (expr (id DERIVED_SCC_SUM)) . (id SSR_ADVISEE_LIST))) ))) ; (stmt (expr (id &rs_StdntList)) = (expr (expr (id CreateRowset)) ( (exprList (expr (literal (definitionLiteral (defnKeyword Record) . SSR_ADVISEE_VW)))) ))) ; (stmt (expr (id &cnt_StdntList)) = (expr (expr (expr (id &rs_StdntList)) . (id Fill)) ( (exprList (expr (literal "where ADVISOR_ID=:1")) , (expr (id %EmployeeId))) ))) ; (stmt (evaluateConstruct Evaluate (expr (id &cnt_StdntList)) When (expr (literal 0)) stmtList When (expr (literal 1)) (stmtList (stmt (expr (expr (id &fld)) . (id Visible)) = (expr (literal (booleanLiteral False)))) ;) When-Other (stmtList (stmt (expr (expr (id &rs_StdntList)) . (id Sort)) ( (exprList (expr (expr (id SSR_ADVISEE_VW)) . (id EMPLID)) , (expr (literal "A"))) )) ; (stmt (expr (expr (id &fld)) . (id ClearDropDownList)) ( )) ; (stmt (expr (id &prev_ID)) = (expr (literal ""))) ; (stmt (forConstruct For &i = (expr (literal 1)) To (expr (id &cnt_StdntList)) (stmtList (stmt (expr (id &curr_ID)) = (expr (expr (expr (expr (expr (id &rs_StdntList)) ( (exprList (expr (id &i))) )) . (id SSR_ADVISEE_VW)) . (id EMPLID)) . (id Value))) ; (stmt (ifConstruct If (expr (expr (id &curr_ID)) = (expr (id &prev_ID))) Then stmtList Else (stmtList (stmt (expr (expr (id &fld)) . (id AddDropDownItem)) ( (exprList (expr (id &curr_ID)) , (expr (expr (expr (expr (expr (expr (expr (id &rs_StdntList)) ( (exprList (expr (id &i))) )) . (id GetRecord)) ( (exprList (expr (literal (definitionLiteral (defnKeyword Record) . SSR_ADVISEE_VW)))) )) . (id GetField)) ( (exprList (expr (literal (definitionLiteral (defnKeyword Field) . NAME)))) )) . (id Value))) )) ; (stmt (expr (id &prev_ID)) = (expr (id &curr_ID))) ; (stmt (ifConstruct If (expr (expr (id &curr_ID)) = (expr (expr (id PEOPLE_SRCH)) . (id EMPLID))) Then (stmtList (stmt (expr (expr (id &fld)) . (id Value)) = (expr (id &curr_ID))) ;) End-If)) ;) End-If)) ;) End-For)) ;) End-Evaluate)) ;) Else (stmtList (stmt (expr (expr (expr (id DERIVED_SCC_SUM)) . (id SSR_ADVISEE_LIST)) . (id Visible)) = (expr (literal (booleanLiteral False)))) ;) End-If)) ;)))